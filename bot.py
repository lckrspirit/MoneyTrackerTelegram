#!/bin/python3

import os
import telebot
from dotenv import load_dotenv
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton


load_dotenv()


bot = telebot.TeleBot(os.getenv("BOT_TOKEN"))
allow_users = [139654828]
categories = ["taxi", "homecredit", "bar", "transport", "coffie", "games", "home", "internet", "phone"]

start_menu = '''
/new - –í–Ω–µ—Å—Ç–∏ –Ω–æ–≤—ã–π —Ä–∞—Å—Ö–æ–¥ üñä
/stats - –°–∫–æ–ª—å–∫–æ –±—ã–ª–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è üìä
/ping - –ß–µ–∫–Ω—É—Ç—å —Å–≤—è–∑—å —Å –±–æ—Ç–æ–º. 
'''


def get_stats():
    message = f"–ü–æ—Ç—Ä–∞—á–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è..üí∏ \n--\n"
    #–ó–∞–ø—Ä–æ—Å –≤ –±–∞–∑—É, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –≥–¥–µ –¥–µ—Ä–≥–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –∏ —Å—É–º–º—É.
    amount, transactions = 400, 3
    message += f"–ü–æ—Ç—Ä–∞—á–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è: {amount}\n–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {transactions}"
    return message


@bot.message_handler(commands=['start'])
def start(message):
    if message.chat.id in allow_users:
        bot.send_message(message.chat.id, start_menu)
    else:
        bot.send_message(message.chat.id, "–í—ã –Ω–µ –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π..")
        print(message.chat.id)


@bot.message_handler(commands=['stats'])
def stats(message):
    if message.chat.id in allow_users:
        bot.send_message(message.chat.id, get_stats())
    else:
        bot.send_message(message.chat.id, "–í—ã –Ω–µ –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π..")


@bot.message_handler(commands=['new'])
def get_transactions(message):
    msg = bot.reply_to(message, "–£–∫–∞–∂–∏—Ç–µ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—É—é —Å—É–º–º—É –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é.. üî•")
    bot.register_next_step_handler(msg, check_transactios)


def check_transactios(message):
    message_list = message.text.split()
    if len(message_list) == 2:
        amount = message_list[0]
        category = message_list[1]
        if category.lower() not in categories:
            msg = bot.reply_to(message, "Current category not found. Try again.. ‚ùå")
            bot.register_next_step_handler(msg, get_transactions(msg))
        else:
            msg = bot.reply_to(message, "Done..")
    else:
        msg = bot.reply_to(message, "Not correct data. Try again.. ‚ùå")


@bot.message_handler(commands=['ping'])
def ping(message):
    bot.send_message(message.chat.id, "pong ü™É")


if __name__ == '__main__':
    try:
        bot.infinity_polling()
    except ValueError:
        print("Ops..")